<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>MFMC - 图片画廊</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
      color: #fff;
      overflow-x: hidden;
    }

    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }

    @keyframes float {
      0%, 100% { transform: translateY(0); }
      50% { transform: translateY(-20px); }
    }

    @keyframes shimmer {
      0% { background-position: -1000px 0; }
      100% { background-position: 1000px 0; }
    }

    .header {
      text-align: center;
      padding: 3rem 2rem;
      background: linear-gradient(135deg, rgba(52, 152, 219, 0.1), rgba(155, 89, 182, 0.1));
      backdrop-filter: blur(10px);
      animation: fadeIn 1s ease-out;
    }

    .header h1 {
      font-size: 3rem;
      background: linear-gradient(135deg, #3498db, #9b59b6);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      margin-bottom: 1rem;
      animation: float 3s ease-in-out infinite;
    }

    .gallery {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 2rem;
      padding: 2rem;
      max-width: 1400px;
      margin: 0 auto;
    }

    .gallery-item {
      position: relative;
      border-radius: 20px;
      overflow: hidden;
      cursor: pointer;
      transition: all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
      animation: fadeIn 0.8s ease-out;
      background: linear-gradient(135deg, rgba(255,255,255,0.05), rgba(255,255,255,0.02));
      border: 1px solid rgba(255,255,255,0.1);
    }

    .gallery-item:hover {
      transform: scale(1.05) translateY(-10px);
      box-shadow: 0 20px 60px rgba(52, 152, 219, 0.4);
      border-color: rgba(52, 152, 219, 0.5);
    }

    .gallery-item img {
      width: 100%;
      height: 300px;
      object-fit: cover;
      transition: transform 0.5s ease;
    }

    .gallery-item:hover img {
      transform: scale(1.1);
    }

    .gallery-item::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
      transition: left 0.5s;
      z-index: 1;
    }

    .gallery-item:hover::before {
      left: 100%;
    }

    .image-info {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      padding: 1.5rem;
      background: linear-gradient(to top, rgba(0,0,0,0.8), transparent);
      transform: translateY(100%);
      transition: transform 0.4s ease;
      z-index: 2;
    }

    .gallery-item:hover .image-info {
      transform: translateY(0);
    }

    .image-name {
      font-size: 1.1rem;
      font-weight: bold;
      color: #3498db;
      margin-bottom: 0.5rem;
    }

    .lightbox {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0,0,0,0.95);
      z-index: 1000;
      justify-content: center;
      align-items: center;
      animation: fadeIn 0.3s ease-out;
    }

    .lightbox.active {
      display: flex;
    }

    .lightbox-content {
      max-width: 90%;
      max-height: 90%;
      position: relative;
      animation: fadeIn 0.5s ease-out;
    }

    .lightbox-content img {
      max-width: 100%;
      max-height: 90vh;
      border-radius: 10px;
      box-shadow: 0 0 50px rgba(52, 152, 219, 0.5);
    }

    .close-btn {
      position: absolute;
      top: 2rem;
      right: 2rem;
      font-size: 3rem;
      color: #fff;
      cursor: pointer;
      transition: all 0.3s ease;
      z-index: 1001;
    }

    .close-btn:hover {
      color: #3498db;
      transform: rotate(90deg);
    }

    .nav-btn {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      font-size: 3rem;
      color: #fff;
      cursor: pointer;
      padding: 1rem;
      transition: all 0.3s ease;
      z-index: 1001;
    }

    .nav-btn:hover {
      color: #3498db;
      transform: translateY(-50%) scale(1.2);
    }

    .prev-btn { left: 2rem; }
    .next-btn { right: 2rem; }

    .back-link {
      display: inline-block;
      margin: 2rem;
      padding: 1rem 2rem;
      background: linear-gradient(135deg, #3498db, #2ecc71);
      color: white;
      text-decoration: none;
      border-radius: 50px;
      transition: all 0.3s ease;
      font-weight: bold;
    }

    .back-link:hover {
      transform: translateY(-3px);
      box-shadow: 0 10px 30px rgba(52, 152, 219, 0.5);
    }

    .loading {
      text-align: center;
      padding: 3rem;
      font-size: 1.5rem;
      color: #3498db;
    }

    @media (max-width: 768px) {
      .header h1 {
        font-size: 2rem;
      }

      .gallery {
        grid-template-columns: 1fr;
        gap: 1rem;
        padding: 1rem;
      }

      .nav-btn {
        font-size: 2rem;
      }
    }
  </style>
</head>
<body>
  <div class="header">
    <h1>🖼️ MFMC 图片画廊</h1>
    <p>探索我们的精彩瞬间</p>
  </div>

  <div class="gallery" id="gallery">
    <div class="loading">正在加载图片...</div>
  </div>

  <div style="text-align: center;">
    <a href="../" class="back-link">← 返回导航站</a>
  </div>

  <div class="lightbox" id="lightbox">
    <span class="close-btn" onclick="closeLightbox()">×</span>
    <span class="nav-btn prev-btn" onclick="changeImage(-1)">‹</span>
    <span class="nav-btn next-btn" onclick="changeImage(1)">›</span>
    <div class="lightbox-content">
      <img id="lightbox-img" src="" alt="">
    </div>
  </div>

  <script>
    let images = [];
    let currentIndex = 0;

    // 备用图片列表（如果fetch失败则使用）
    const fallbackImages = [
      "landscape_tower_1.png",
      "landscape_tower_2.png",
      "station_1.png"
    ];

    async function loadImages() {
      const gallery = document.getElementById('gallery');
      let imageFiles = [];
      
      try {
        const response = await fetch('images.json');
        if (!response.ok) throw new Error('Failed to load');
        const data = await response.json();
        imageFiles = data.images;
      } catch (error) {
        console.log('使用备用图片列表');
        imageFiles = fallbackImages;
      }
      
      if (imageFiles.length === 0) {
        gallery.innerHTML = '<div class="loading">暂无图片</div>';
        return;
      }

      images = imageFiles;
      gallery.innerHTML = '';
      
      images.forEach((src, index) => {
        const item = document.createElement('div');
        item.className = 'gallery-item';
        item.style.animationDelay = `${index * 0.1}s`;
        
        const img = document.createElement('img');
        img.src = src;
        img.alt = `图片 ${index + 1}`;
        img.loading = 'lazy';
        img.onerror = function() {
          this.parentElement.style.display = 'none';
        };
        
        const info = document.createElement('div');
        info.className = 'image-info';
        info.innerHTML = `<div class="image-name">${src.split('/').pop()}</div>`;
        
        item.appendChild(img);
        item.appendChild(info);
        item.onclick = () => openLightbox(index);
        
        gallery.appendChild(item);
      });
    }

    function openLightbox(index) {
      currentIndex = index;
      document.getElementById('lightbox-img').src = images[index];
      document.getElementById('lightbox').classList.add('active');
      document.body.style.overflow = 'hidden';
    }

    function closeLightbox() {
      document.getElementById('lightbox').classList.remove('active');
      document.body.style.overflow = 'auto';
    }

    function changeImage(direction) {
      currentIndex = (currentIndex + direction + images.length) % images.length;
      document.getElementById('lightbox-img').src = images[currentIndex];
    }

    document.addEventListener('keydown', (e) => {
      if (document.getElementById('lightbox').classList.contains('active')) {
        if (e.key === 'Escape') closeLightbox();
        if (e.key === 'ArrowLeft') changeImage(-1);
        if (e.key === 'ArrowRight') changeImage(1);
      }
    });

    document.getElementById('lightbox').addEventListener('click', (e) => {
      if (e.target.id === 'lightbox') closeLightbox();
    });

    loadImages();
  </script>
</body>
</html>